import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as t}from"./app-C0hbX5Sc.js";const p={},e=t(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>延迟加载：async、defer
		例如：&lt;script defer type=&quot;text/javascript&quot; src=&#39;script.js&#39;&gt;&lt;/script&gt;
		例如：&lt;script async type=&quot;text/javascript&quot; src=&#39;script.js&#39;&gt;&lt;/script&gt;
		
defer : 等html全部解析完成，才会执行js代码，顺次执行js脚本。
async : async是和html解析同步的（一起的），不是顺次执行js脚本（谁先加载完谁先执行）。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一、什么延迟加载的方式都不加" tabindex="-1"><a class="header-anchor" href="#一、什么延迟加载的方式都不加"><span>一、什么延迟加载的方式都不加</span></a></h2><figure><img src="https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181140308.png" alt="image-20240518113957978" tabindex="0" loading="lazy"><figcaption>image-20240518113957978</figcaption></figure><blockquote><p>可见，绿色部分代表的是正在解析html，当遇到一个js时，他会暂停解析html，并去解析js，然后去执行js，最后在开始解析html，直到解析完成</p></blockquote><ul><li><strong>代码示例</strong></li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./script.js<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181147606.png" alt="image-20240518114706523" tabindex="0" loading="lazy"><figcaption>image-20240518114706523</figcaption></figure><blockquote><p>可见，获取不到box，这是因为他在解析html时，遇到了js文件，当解析并执行完成js后，才解析之后的html，所以打印的结果为null</p></blockquote><h2 id="二、async延迟方式" tabindex="-1"><a class="header-anchor" href="#二、async延迟方式"><span>二、async延迟方式</span></a></h2><figure><img src="https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181149614.png" alt="image-20240518114936359" tabindex="0" loading="lazy"><figcaption>image-20240518114936359</figcaption></figure><blockquote><p>可见，在解析html时，遇到了js，那么他们两个会并行解析，随后执行剩余的代码</p></blockquote><ul><li><strong>代码示例</strong></li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">async</span>
            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./script.js<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181153454.png" alt="image-20240518115317139" tabindex="0" loading="lazy"><figcaption>image-20240518115317139</figcaption></figure><blockquote><p>可见，可以获取到box，这是因为html解析是遇到js后，他们会存在并行解析，等html与js解析好后，在一起执行</p></blockquote><h2 id="三、defer延迟方式" tabindex="-1"><a class="header-anchor" href="#三、defer延迟方式"><span>三、defer延迟方式</span></a></h2><figure><img src="https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181200509.png" alt="image-20240518115959234" tabindex="0" loading="lazy"><figcaption>image-20240518115959234</figcaption></figure><blockquote><p>可见，等绿色html执行完成后，在执行解析完成的js</p></blockquote><ul><li><strong>代码示例</strong></li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">defer</span>
            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./script.js<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181201237.png" alt="image-20240518120152985" tabindex="0" loading="lazy"><figcaption>image-20240518120152985</figcaption></figure><blockquote><p>可见，一样可以获取到box</p></blockquote><h2 id="四、defer与async的区别" tabindex="-1"><a class="header-anchor" href="#四、defer与async的区别"><span>四、defer与async的区别</span></a></h2><ul><li><p><strong>defer：</strong></p><ul><li>defer是在等html全部解析完成后，再去执行的js，而且defer去执行js时，是顺次执行</li></ul></li><li><p><strong>async：</strong></p><ul><li>async是html与js共同解析并执行的，而async不按顺次执行，他是等某个js谁先解析完谁先执行</li></ul></li><li><p><strong>总结来说：</strong></p><ul><li><code>async</code> 更适合于不需要等待页面完整加载即可运行的第三方脚本，因为它提供了更高的灵活性，但可能伴随着一定的执行时机的不确定性。</li><li><code>defer</code> 则是为了确保页面加载完成后才执行脚本，减少因页面未加载完全而引发的错误</li></ul></li><li><p><strong>建议：</strong></p><ul><li>如果项目中使用defer解析js时，某个js2依赖于js1，那么，js1必须放在js2上面，否则会出现js2里面的一些变量属性获取不到，导致js报错</li></ul></li></ul>`,27),o=[e];function c(l,i){return a(),s("div",null,o)}const k=n(p,[["render",c],["__file","01 延迟加载JS有哪些方式？.html.vue"]]),g=JSON.parse(`{"path":"/interview/JavaScript/01%20%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BDJS%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E5%BC%8F%EF%BC%9F.html","title":"01-延迟加载JS有哪些方式？","lang":"zh-CN","frontmatter":{"title":"01-延迟加载JS有哪些方式？","order":1,"author":"Ms.LM","date":"2024-05-18T00:00:00.000Z","footer":"加油！","copyright":"Copyright © 2024-present Mr.LM","description":"一、什么延迟加载的方式都不加 image-20240518113957978image-20240518113957978 可见，绿色部分代表的是正在解析html，当遇到一个js时，他会暂停解析html，并去解析js，然后去执行js，最后在开始解析html，直到解析完成 代码示例 image-20240518114706523image-2024051...","head":[["link",{"rel":"canonical","href":"https://mengblog.cn/interview/JavaScript/01%20%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BDJS%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E5%BC%8F%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://mengblog.cn/interview/JavaScript/01%20%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BDJS%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E5%BC%8F%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"梦博客"}],["meta",{"property":"og:title","content":"01-延迟加载JS有哪些方式？"}],["meta",{"property":"og:description","content":"一、什么延迟加载的方式都不加 image-20240518113957978image-20240518113957978 可见，绿色部分代表的是正在解析html，当遇到一个js时，他会暂停解析html，并去解析js，然后去执行js，最后在开始解析html，直到解析完成 代码示例 image-20240518114706523image-2024051..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181140308.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-30T12:08:58.000Z"}],["meta",{"property":"article:author","content":"Ms.LM"}],["meta",{"property":"article:published_time","content":"2024-05-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-30T12:08:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01-延迟加载JS有哪些方式？\\",\\"image\\":[\\"https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181140308.png\\",\\"https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181147606.png\\",\\"https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181149614.png\\",\\"https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181153454.png\\",\\"https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181200509.png\\",\\"https://mengblog-1305308047.cos.ap-guangzhou.myqcloud.com/202405181201237.png\\"],\\"datePublished\\":\\"2024-05-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-30T12:08:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ms.LM\\"}]}"]]},"headers":[{"level":2,"title":"一、什么延迟加载的方式都不加","slug":"一、什么延迟加载的方式都不加","link":"#一、什么延迟加载的方式都不加","children":[]},{"level":2,"title":"二、async延迟方式","slug":"二、async延迟方式","link":"#二、async延迟方式","children":[]},{"level":2,"title":"三、defer延迟方式","slug":"三、defer延迟方式","link":"#三、defer延迟方式","children":[]},{"level":2,"title":"四、defer与async的区别","slug":"四、defer与async的区别","link":"#四、defer与async的区别","children":[]}],"git":{"createdTime":1719749338000,"updatedTime":1719749338000,"contributors":[{"name":"Mr Lm","email":"wz0608@outlook.com","commits":1}]},"readingTime":{"minutes":2.6,"words":779},"filePathRelative":"interview/JavaScript/01 延迟加载JS有哪些方式？.md","localizedDate":"2024年5月18日","copyright":{"author":"Ms.LM"},"autoDesc":true,"excerpt":"<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>延迟加载：async、defer\\n\\t\\t例如：&lt;script defer type=\\"text/javascript\\" src='script.js'&gt;&lt;/script&gt;\\n\\t\\t例如：&lt;script async type=\\"text/javascript\\" src='script.js'&gt;&lt;/script&gt;\\n\\t\\t\\ndefer : 等html全部解析完成，才会执行js代码，顺次执行js脚本。\\nasync : async是和html解析同步的（一起的），不是顺次执行js脚本（谁先加载完谁先执行）。\\n</code></pre></div>"}`);export{k as comp,g as data};
